---
import { getAllTaxonomy, getTaxonomy } from "@utils/taxonomyParser";
import { humanize, slugify, pluralize } from "@utils/textConverter";

import LabelCloud from "@components/common/LabelCloud.astro";

const { sidebarCountFilters, sidebarFilters, collection } = Astro.props;
// console.log(sidebarFilters);
---

<aside
  class="flex w-full max-w-3xl flex-col gap-4 px-4 lg:w-1/3 lg:basis-auto"
  aria-label=""
>
  <!-- sidebarCountFilters -->
  {
    sidebarCountFilters &&
      sidebarCountFilters.map(async (filter: any) => {
        const categories = await getAllTaxonomy(collection, filter);
        const entries = Object.entries(categories);
        // console.log(entries);
        return (
          <section class="max-h-64 rounded border-[3px] border-[--font-color] bg-[--secondary-background]  p-4">
            <h2 class="mb-2 text-xl uppercase">
              {pluralize(filter, entries.length)}
            </h2>
            <LabelCloud
              {entries}
              path={`/blog/${slugify(filter)}`}
              showCount
              short
            />
          </section>
        );
      })
  }

  {
    sidebarFilters &&
      sidebarFilters.map(async (filter: any) => {
        const entries = await getTaxonomy(collection, filter);
        return (
          <section class="max-h-48 overflow-y-scroll rounded border-[3px] border-[--font-color]  bg-[--secondary-background] p-4">
            <h2 class=" mb-2 text-xl uppercase">
              {pluralize(filter, entries.length)}
            </h2>
            <ul class="flex flex-wrap gap-2 text-xs lg:text-sm">
              {entries.map((tag: any) => {
                return (
                  <li class="inline-block">
                    <a
                      class={`filter-item block rounded bg-[--neutral-background] px-2 py-1 hover:bg-[--primary-background] ${
                        filter === "tags" ? "lowercase" : "capitalize"
                      }`}
                      href={`/blog/${slugify(filter)}/${slugify(tag)}`}
                    >
                      {filter === "tags" ? `#${slugify(tag)}` : humanize(tag)}
                    </a>
                  </li>
                );
              })}
            </ul>
          </section>
        );
      })
  }
</aside>
