---
import { Icon } from "astro-icon/components";
import Button from "./Button.astro";
import { Image } from "astro:assets";

const {
  title,
  subtitle,
  gradientText,
  imgSrc,
  learnTarget = null,
  quoteButton = false,
  learnButton = false,
  learnMessage = "Learn More",
} = Astro.props;
const learnLink = `${learnTarget}`;
---

<section class="hero my-24 flex min-h-[80vh] items-center px-4 lg:px-6">
  <div class="container">
    <div
      class="grid max-w-max auto-rows-min grid-cols-1 grid-rows-1 content-center items-center justify-items-center gap-x-16 lg:grid-cols-2"
    >
      <div
        class="col-start-1 flex flex-col items-center justify-center gap-8 py-4 text-center md:items-start md:text-left"
      >
        <h1
          class="justify-self-end text-center text-6xl font-bold md:text-left lg:text-7xl"
        >
          {title}<br />
          <span class="text-gradient">{gradientText}</span>
        </h1>
        {subtitle && <p class="max-w-[40ch] text-xl md:text-2xl">{subtitle}</p>}

        {
          quoteButton || learnButton ? (
            <div class="flex flex-col gap-3 min-[500px]:flex-row">
              {quoteButton ? (
                <Button text="Get a Quote" href="/quoter" icon="ph:chat" />
              ) : (
                ""
              )}
              {learnButton ? (
                <Button
                  buttonColor="color-secondary"
                  href={learnLink}
                  text={learnMessage}
                  icon="mdi:arrow-down"
                />
              ) : (
                ""
              )}
            </div>
          ) : (
            ""
          )
        }
      </div>
      <slot />

      <Image
        src={imgSrc}
        alt=""
        widths={[10, 640]}
        sizes={`(max-width:1000px) 10px, 640px`}
        format="avif"
        class="col-start-2 row-start-1 mb-8 hidden object-scale-down lg:row-end-3 lg:block lg:min-h-full lg:w-full xl:row-end-4"
        loading="eager"
      />
    </div>
  </div>
</section>

<style>
  .text-gradient {
    background: linear-gradient(
      315deg,
      var(--primary-200) 25%,
      var(--secondary-500)
    );
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  :global(.darkmode .text-gradient) {
    background: linear-gradient(
      315deg,
      var(--primary-200) 25%,
      var(--secondary-400)
    );
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  :global(html) {
    scroll-behavior: smooth;
  }
</style>
