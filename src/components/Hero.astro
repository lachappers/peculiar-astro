---
import { Icon } from "astro-icon";
import Button from "./Button.astro";

const {
  title,
  gradientText,
  imgSrc = "../assets/img/hero-vector.svg",
  learnTarget = null,
  quoteButton = false,
  learnButton = false,
} = Astro.props;
const learnLink = `${learnTarget}`;
---

<section class="hero my-24 flex min-h-[80vh] items-center">
  <div class="container">
    <div
      class="grid max-w-max auto-rows-min grid-cols-1 grid-rows-1 content-center items-center justify-items-center gap-x-16 lg:grid-cols-2"
    >
      <div
        class="col-start-1 flex flex-col items-center justify-center gap-8 py-4 md:items-start"
      >
        <h1 class="z-10 text-center text-6xl md:text-left lg:text-7xl">
          {title}
          <span class="text-gradient">{gradientText}</span>
        </h1>
        {
          quoteButton || learnButton ? (
            <div class="flex flex-col gap-3 min-[500px]:flex-row">
              {quoteButton ? (
                <Button text="Get a Quote" href="/quoter" icon="ph:chat" />
              ) : (
                ""
              )}
              {learnButton ? (
                <Button
                  buttonColor="color-secondary"
                  href={learnLink}
                  text="Learn More"
                  icon="mdi:arrow-down"
                />
              ) : (
                ""
              )}
            </div>
          ) : (
            ""
          )
        }
      </div>
      <slot />
      <img
        class="col-start-2 row-start-1 hidden lg:row-end-3 lg:block xl:row-end-4"
        src={imgSrc.src}
        alt=""
        decoding="async"
      />
    </div>
  </div>
</section>

<style lang="scss">
  .text-gradient {
    background: linear-gradient(
      315deg,
      var(--primary-200) 25%,
      var(--secondary-500)
    );
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  :global(.darkmode .text-gradient) {
    background: linear-gradient(
      315deg,
      var(--primary-200) 25%,
      var(--secondary-400)
    );
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  :global(html) {
    scroll-behavior: smooth;
  }
</style>
