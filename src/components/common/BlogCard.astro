---
import { CONTENTSETTINGS } from "@config";
import { formatDate } from "@utils/dateFormat";
import { humanize, plainify, slugify } from "@utils/textConverter";
import { Icon } from "astro-icon/components";
import Button from "@components/Button.astro";
// import { FaRegFolder, FaRegUserCircle } from "react-icons/fa";
import PublicImage from "@components/shared/PublicImage.astro";

const { data } = Astro.props;
const { title, image, date, author, categories, preview, tags } = data.data;
---

<div
  class="sm:min-w-md flex h-full max-w-full flex-col items-center overflow-clip rounded-md border-[3px] border-[--font-color] pb-2 text-center shadow-postMod sm:h-full sm:max-w-lg sm:items-start sm:text-left"
>
  {
    image && (
      <PublicImage
        class="min-h-1/5 h-1/4 max-h-36 w-full flex-initial  object-cover object-center"
        src={image}
        alt={title}
        width={445}
        height={230}
        format="webp"
      />
    )
  }
  <h2
    class="mt-1 flex h-1/5 min-h-max w-full flex-none items-center px-4 text-lg"
  >
    <a class="title-link" href={`/blog/${data.slug}`}>
      {title}
    </a>
  </h2>

  <ul
    class="mb-1 flex w-full max-w-full flex-wrap items-center justify-around gap-1 whitespace-nowrap px-2 text-xs sm:flex-row sm:justify-start"
  >
    {
      categories && (
        <ul
          class="inline-block w-full max-w-full flex-auto items-center overflow-hidden text-ellipsis text-center text-[--font-variant] sm:w-full sm:text-left"
          aria-label="categories"
        >
          <Icon name="mdi:folder-outline" class="inline-block flex-none" />
          {categories.map((category: string, index: number) => (
            <li class=" mx-1 inline-block text-xs uppercase">
              <a
                class="title-link inline-block text-ellipsis text-center"
                href={`/blog/categories/${slugify(category)}`}
              >
                {humanize(category)}
              </a>
              {index !== categories.length - 1 && (
                <span aria-hidden="true">|</span>
              )}
            </li>
          ))}
        </ul>
      )
    }
    {
      tags && (
        <ul
          class="mt-1 line-clamp-1 inline-block  w-full gap-1 overflow-hidden text-ellipsis whitespace-nowrap "
          aria-label="tags"
        >
          {tags.map((category: string, index: number) => (
            <li class="mx-1 inline-block w-fit rounded bg-[--primary-background] px-1 py-1 text-xs lowercase">
              <a class="title-link" href={`/blog/tags/${slugify(category)}`}>
                #{humanize(category)}
              </a>
            </li>
          ))}
        </ul>
      )
    }

    <li class="flex flex-auto gap-2 text-sm sm:w-1/3">
      <a
        class="title-link inline-flex items-center justify-center gap-2 text-[--font-variant]"
        href={`/authors/${slugify(author)}`}
      >
        <Icon
          name="mdi:account-circle-outline"
          class="block flex-none"
          aria-label="author"
        />
        {humanize(author)}
      </a>
    </li>
    {
      date && (
        <li class="flex flex-auto items-center gap-2 text-sm text-[--font-variant] sm:w-1/3">
          <Icon
            name="mdi:clock-outline"
            class="block flex-none"
            aria-label="date"
          />
          {formatDate(date)}
        </li>
      )
    }
  </ul>

  <div class="m-2 flex h-max min-h-max max-w-[70ch] text-sm">
    <p class="line-clamp-4 h-fit text-ellipsis">
      {preview ? preview : plainify(data.body)}
    </p>
    <!-- {plainify(data.body?.slice(0, Number(CONTENTSETTINGS.previewLength)))} -->
  </div>
  <Button
    href={`/blog/${data.slug}`}
    text="Read Post"
    icon="mdi:arrow-right"
    addClasses="size-small last:mt-auto w-fit mx-2"
  />
</div>
