---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import {formatDate} from "@utils"
const {icon, category, cardLink, title="Don't forget the title", author, date, avatar, tags, image, imageAlt} = Astro.props
const interactive = Astro.props.cardLink ? "interactive" : ""

---
<!-- accessible card configurable for multi-purpose -->

<li class=` group overflow-hidden card w-full min-w-40 max-w-xs bg-[--surface-container-lowest] overflow-hidden shadow-sm border border-[--outline-variant] flex flex-col grow min-w-min ${interactive}`>

    <div class="flex-1  w-full p-6 flex flex-col  gap-2">
        <!-- if icon -->
        {icon &&
            <span class="inline-flex items-center justify-center text-[--on-secondary] bg-[--secondary] rounded-full w-10 h-10 ">
                <Icon name={icon} class="h-6 w-6"/>
            </span>
        }
        {category &&
                <span class="text-xs font-medium text-[--primary] uppercase ">{category}</span>
        }
        {tags &&
                <ul class="flex gap-1">
                    { tags.map((tag) => (
                        <li class="text-xs font-medium text-[--on-primary-fixed] rounded-sm uppercase bg-[--primary-fixed]"><a href={'/tags/' + tag} class="relative p-1">{tag}</a></li>
                    ))}
                </ul>
        }
        <h3 class="block mt-2 text-xl font-semibold capitalize">
            {cardLink ? (
                <a href={cardLink} class=" text-[--on-surface] transition-colors duration-300 transform hover:text-[--inverse-primary] hover:underline focus:outline-none" tabindex="0" role="link">{title}</a>
                ) : (<span>{title}</span>) 
                }
        </h3>
        <slot />
        <!-- if blog -->
        {author && (
            <div class="mt-4 flex items-center flex-wrap justify-between gap-2 last:mt-auto last:pt-4">
                    <div class="flex items-center gap-2">
                        {avatar &&<Image src={avatar} height="50" width="50" class="object-cover h-10 w-10 rounded-full" alt="" />}
                        <p class="mx-2 font-semibold " >{author}</p>
                    </div>

                {date &&
                    <span class="mx-1 text-xs text-[--on-surface-variant] uppercase">{formatDate(date)}</span>
                }
            </div>
        )}
        <!-- if interactive -->
        {cardLink &&
            <span class="last:mt-auto last:pt-4 inline-flex w-full items-center gap-1 text-sm text-[--primary] capitalize transition-colors duration-300 transform  hover:underline hover:text-[--secondary]" aria-hidden="true">read more <Icon name="mdi:arrow-right" class="" /></span>
        }
    </div>
    <!-- if image -->
    {image ?
        <Image class="order-first object-cover object-center group-hover:scale-105 transition-transform duration-500 ease-in-out w-full h-1/3 flex-none " format="webp" height="200" width="200" src={image} alt={imageAlt} slot="top-image"/>
    :  <slot name="top-image" />
    }


</li>
<style>
    .interactive {
        cursor: pointer;
    }
    .card a:focus {
    text-decoration: underline;
    }
    .interactive:hover {
        box-shadow: 0 0 0 0.25rem;
    }

    .interactive:focus-within{
        box-shadow: 0 0 0 0.25rem;
    }

    .interactive:focus-within a:focus {
        text-decoration: none;
    }
</style>
<script>
    const cards = document.querySelectorAll('.card');  
    Array.prototype.forEach.call(cards, card => {  
        let down, up, link = card.querySelector('h3 a');
        card.onmousedown = () => down = +new Date();
        card.onmouseup = () => {
            up = +new Date();
            if ((up - down) < 200) {
                link.click();
            }
        }
    });
</script>