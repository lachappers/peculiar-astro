---
import { getCollection, getEntry } from "astro:content";
import ArticleLayout from "@layouts/ArticleLayout.astro";
import { Icon } from "astro-icon/components";
import { formatDate } from "@utils/dateFormat";
import { Image } from "astro:assets";

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogs = await getCollection("blog");
  return blogs.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the entry directly from the prop on render
const { entry } = Astro.props;
// pull out the content from the collection
const { Content } = await entry.render();
---

<ArticleLayout frontmatter={entry.data}>
  <article class="flex max-w-3xl flex-col items-center justify-center">
    <header
      class="not-prose flex w-full flex-col items-center gap-4 py-6 text-[--on-surface-variant]"
    >
      <div class="flex w-full flex-wrap items-center gap-4">
        <time
          datetime={String(entry.data.date)}
          class="inline-flex items-center gap-2"
          ><Icon name="mdi:clock" class="inline-block h-4 w-4" />{
            formatDate(entry.data.date)
          }</time
        >
        {
          entry.data.author && (
            <p class="inline-flex items-center gap-2">
              <Icon name="mdi:user" class="inline-block h-4 w-4 " />
              {entry.data.author}
            </p>
          )
        }
        <a
          class="inline-block font-semibold uppercase hover:underline"
          href="/blog"
        >
          Blog
        </a>
      </div>

      <h1 class="font-serif-heading w-full text-3xl font-bold md:text-5xl">
        {entry.data.title}
      </h1>
      <p class="w-full text-lg md:text-xl">
        {entry.data.preview}
      </p>
      {
        entry.data.image ? (
          <Image
            src={entry.data.image}
            class="max-w-full sm:rounded-md lg:max-w-screen-xl"
            widths={[400, 900]}
            sizes="(max-width: 900px) 400px, 900px"
            alt={entry.data?.imageAlt || ""}
            width={900}
            height={506}
            loading="lazy"
            decoding="async"
            format="webp"
          />
        ) : (
          <div class="max-w-3xl sm:px-6">
            <div class="border-t" />
          </div>
        )
      }
    </header>
    <div class="prose prose-base py-4 dark:prose-invert">
      <!-- {Content ? <Content /> : <Fragment set:html={entry.content || ''} />} -->
      <Content />
    </div>
  </article>

  <div class="mt-8 text-center">
    <a
      href="/blog"
      class="rounded-md bg-[--primary-container] px-5 py-3 transition hover:bg-[--inverse-primary]"
      >‚Üê Back to Blog</a
    >
  </div>
</ArticleLayout>
