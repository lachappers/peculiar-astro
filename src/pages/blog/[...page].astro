---
// utils
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";
import { Image } from "astro:assets";
import { getSinglePage } from "@utils/contentParser";
import { getAllTaxonomy, getTaxonomy } from "@utils/taxonomyParser";
import { sortByDate } from "@utils/sortFunctions";
import { CONTENTSETTINGS } from "@config";

// components
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import Pagination from "@components/unused/Pagination.astro";
import PaginationMinimal from "@components/shared/PaginationMinimal.astro";
import Card from "@components/common/Card.astro";
import PageHeader from "@components/shared/PageHeader.astro";
import BlogCard from "@components/common/BlogCard.astro";

import IndexSidebar from "@components/shared/IndexSidebar.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = await getCollection("blog", ({ data }) => {
    //   return data.draft !== true;
    // Filter out content entries with `draft: true` only when building for production
    return import.meta.env.PROD ? data.draft !== true : true;
  });

  const formattedPosts = sortByDate(allPosts);
  return paginate(formattedPosts, {
    pageSize: CONTENTSETTINGS.indexPagination,
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const pathname = new URL(Astro.request.url).pathname;
const firstPath = isNaN(Number(pathname.split("/").slice(-1)))
  ? pathname
  : pathname.split("/").slice(0, -1).join("/");
const sidebarCountFilters = CONTENTSETTINGS.blog.sidebarCountFilters;
const sidebarFilters = CONTENTSETTINGS.blog.sidebarFilters;
const blogFolder = "blog";
// console.log(page);
---

<DefaultLayout title="Blog">
  <PageHeader title="Blog Posts" />
  <section class="flex w-full flex-col items-center justify-start">
    <div
      class="flex w-full max-w-screen-2xl flex-auto flex-wrap items-start justify-center"
    >
      <!-- blog posts -->
      <div class="flex min-h-full w-full flex-col lg:w-2/3 lg:basis-auto">
        <div class="flex flex-wrap items-stretch justify-center">
          {
            page.data.map((post) => (
              <div class="mb-14 flex w-full max-w-sm flex-auto  px-4 sm:min-h-full md:w-1/2 md:basis-auto">
                <BlogCard data={post} />
              </div>
            ))
          }
        </div>
        {
          page.total > CONTENTSETTINGS.indexPagination && (
            <PaginationMinimal section="blog" page={page} baseUrl={firstPath} />
          )
        }
      </div>

      <!-- sidebar -->
      <IndexSidebar
        collection={blogFolder}
        sidebarCountFilters={sidebarCountFilters}
        sidebarFilters={sidebarFilters}
      />
    </div>
  </section>
  <!-- <section class="mt-24 flex flex-col items-center gap-4 px-4 lg:px-6">
    <div class="flex w-full flex-col gap-4">
      <h1
        class="justify-self-end text-center text-6xl font-bold md:text-left lg:text-7xl"
      >
        News, Updates and<br />
        <span class="text-gradient">Helpful Content</span>
      </h1>
      <p class="max-w-[40ch] text-xl md:text-2xl">
        Dive into our blog; packed with actionable tips, industry trends, and
        success stories for UK small businesses. Start your journey today
      </p>
    </div>

    {
      page.data.total === 0 ? (
        <div class="mt-16 flex h-full max-w-screen-xl flex-auto flex-col items-center gap-6">
          <p class="max-w-[40ch] text-center text-lg md:text-xl">
            We're working on some fresh content for you - check back soon!
          </p>
          <Image
            src="https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExOWp2ZzExNzF1bzNrNDhzcGd6anRzZnhoNHd0OG12bnp3MHl2ajJ6NiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/wHE6Dd6RCVHQfjK5dy/giphy.gif"
            alt=""
            width="400"
            height="400"
            class="giphy aspect-square h-96 w-fit rounded-full object-cover"
          />
        </div>
      ) : (
        <>
          <ul class="my-8 grid w-full max-w-screen-xl grid-cols-3 justify-items-center gap-6">
            {page.data.map((blog) => (
              <Card
                tags={blog.data.tags}
                title={blog.data.title}
                cardLink={`/blog/${blog.slug}`}
                author={blog.data.author}
                date={blog.data.date}
                image={blog.data.image}
                imageAlt={blog.data.imageAlt}
              >
                <p class="mt-2 text-ellipsis text-sm">{blog.data.preview}</p>
              </Card>
            ))}
          </ul>
          {page.total > SITE.blogPageSize && (
            <Pagination
              length={page.lastPage}
              currentUrl={page.url.current}
              currentPage={page.currentPage}
              firstUrl={`/${firstPath}`}
              prevUrl={page.url.prev}
              nextUrl={page.url.next}
              lastUrl={`/${firstPath}/${page.lastPage}`}
            />
          )}
        </>
      )
    }
  </section> -->
</DefaultLayout>
